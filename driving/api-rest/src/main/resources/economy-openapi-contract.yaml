openapi: 3.0.1
info:
  title: Economy API
  description: Economy API from my personal book
  version: 3.3.0
tags:
  - name: Transactions
  - name: Users
  - name: Auth
paths:
  /transactions:
    post:
      summary: Create a new transaction.
      operationId: postTransaction
      tags:
        - Transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequestBodyType"
      responses:
        '201':
          description: CREATED SUCCESSFULLY
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
    get:
      summary: Get all transactions.
      operationId: getTransactions
      tags:
        - Transactions
      parameters:
        - $ref: "#/components/parameters/pageSizeQueryParam"
        - $ref: "#/components/parameters/pageNumberQueryParam"
        - $ref: "#/components/parameters/startDateQueryParam"
        - $ref: "#/components/parameters/endDateQueryParam"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsResponseType"
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
  /transactions/{id}:
    get:
      summary: Get transaction
      operationId: getTransaction
      tags:
        - Transactions
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponseType"
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
    patch:
      summary: Modify transaction
      operationId: patchTransaction
      tags:
        - Transactions
      parameters:
        - $ref: "#/components/parameters/idPathParam"
        - $ref: "#/components/parameters/typePathParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequestBodyPatchType"
      responses:
        '200':
          description: OK
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
    delete:
      summary: Delete transaction
      operationId: deleteTransaction
      tags:
        - Transactions
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      responses:
        '204':
          description: NO CONTENT
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
  /users:
    post:
      summary: Create new user
      operationId: postUser
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequestBodyType"
      responses:
        '201':
          description: CREATED SUCCESSFULLY
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
  /users/{id}:
    patch:
      summary: Modify user
      operationId: patchUser
      tags:
        - Users
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequestBodyPatchType"
      responses:
        '201':
          description: CREATED SUCCESSFULLY
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
  /users/activate:
    post:
      summary: Activate user by verification code and email
      operationId: activateUser
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivateUserRequestBodyType"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserActivateResponseType"
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
  /login:
    post:
      summary: User login
      operationId: postLogin
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequestBodyType"
      responses:
        '201':
          description: CREATED SUCCESSFULLY
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponseType"
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
  /resend-verification-code:
    post:
      summary: Resend verification code
      operationId: resendVerificationCode
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendVerificationCodeRequestBodyType"
      responses:
        '200':
          description: OK
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
components:
  schemas:
    ResendVerificationCodeRequestBodyType:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          example: email@address.org
    ActivateUserRequestBodyType:
      type: object
      required:
        - email
        - code
      properties:
        email:
          type: string
          format: email
          example: email@address.org
        code:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
    UserRequestBodyPatchType:
      type: object
      properties:
        name:
          type: string
          format: string
          example: Oscar
        firstSurname:
          type: string
          format: string
          example: Garcia
        secondSurname:
          type: string
          format: string
          example: Marco
        email:
          type: string
          format: email
          example: email@address.org
        password:
          type: string
          format: string
          example: 23123QS:323
    UserActivateResponseType:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          format: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    LoginResponseType:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          format: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    LoginRequestBodyType:
      type: object
      properties:
        email:
          type: string
          format: email
          example: email@address.org
        password:
          type: string
          format: string
          example: 23123QS:323
    UserRequestBodyType:
      type: object
      properties:
        name:
          type: string
          format: string
          example: Oscar
        firstSurname:
          type: string
          format: string
          example: Garcia
        secondSurname:
          type: string
          format: string
          example: Marco
        email:
          type: string
          format: email
          example: email@address.org
        password:
          type: string
          format: string
          example: 23123QS:323
    TransactionRequestBodyType:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: 2.55
        category:
          type: string
          format: string
          example: Food
        description:
          type: string
          format: string
          example: Hot dog
        date:
          type: string
          format: date
          example: 2024-01-01
        type:
          type: string
          format: string
          example: expense
    TransactionRequestBodyPatchType:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: 2.55
        category:
          type: string
          format: string
          example: Food
        description:
          type: string
          format: string
          example: Hot dog
        date:
          type: string
          format: date
          example: 2024-01-01
    TransactionsResponseType:
      type: object
      required:
        - results
        - pagination
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/TransactionDateResponseType"
        summary:
          type: object
          $ref: "#/components/schemas/SummaryResponseType"
        pagination:
          type: object
          $ref: "#/components/schemas/PaginationResponseType"
    TransactionDateResponseType:
      type: object
      required:
        - date
        - expenses
        - revenues
        - amount
      properties:
        date:
          type: string
          format: date
          example: 2024-01-01
        expenses:
          type: array
          items:
            $ref: "#/components/schemas/TransactionDetailResponseType"
        revenues:
          type: array
          items:
            $ref: "#/components/schemas/TransactionDetailResponseType"
        amount:
          type: object
          $ref: "#/components/schemas/TransactionDateAmountResponseType"
    TransactionDetailResponseType:
      type: object
      required:
        - id
        - amount
        - category
        - description
      properties:
        id:
          type: integer
          format: int64
          example: 1
        amount:
          type: number
          format: float
          example: 2.55
        category:
          type: string
          format: string
          example: Food
        description:
          type: string
          format: string
          example: Hot dog
    TransactionResponseType:
      type: object
      required:
        - id
        - date
        - amount
        - category
        - description
      properties:
        id:
          type: integer
          format: int64
          example: 1
        date:
          type: string
          format: date
          example: 2024-01-01
        amount:
          type: number
          format: float
          example: 2.55
        category:
          type: string
          format: string
          example: Food
        description:
          type: string
          format: string
          example: Hot dog
    TransactionDateAmountResponseType:
      type: object
      required:
        - expense
        - revenue
      properties:
        expense:
          type: number
          format: float
          example: 2.55
        revenue:
          type: number
          format: float
          example: 2.55
    SummaryResponseType:
      type: object
      required:
        - totalExpense
        - totalRevenue
        - totalMoney
      properties:
        totalExpense:
          type: number
          format: float
          example: 2.55
        totalRevenue:
          type: number
          format: float
          example: 2.55
        totalMoney:
          type: number
          format: float
          example: 0.0
    PaginationResponseType:
      type: object
      required:
        - pageNumber
        - pageSize
        - totalResults
      properties:
        pageNumber:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 10
        totalResults:
          type: integer
          format: int32
          example: 100
    ErrorResponseType:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          format: string
          example: Internal Server Error
  parameters:
    pageSizeQueryParam:
      in: query
      name: pageSize
      schema:
        type: integer
        default: 10
      required: false
    pageNumberQueryParam:
      in: query
      name: pageNumber
      schema:
        type: integer
        default: 1
      required: false
    startDateQueryParam:
      in: query
      name: startDate
      schema:
        type: string
        format: date
      required: false
    endDateQueryParam:
      in: query
      name: endDate
      schema:
        type: string
        format: date
      required: false
    idPathParam:
      in: path
      name: id
      schema:
        type: integer
        format: int64
      required: true
    typePathParam:
      in: query
      name: type
      schema:
        type: string
        format: string
      required: true
